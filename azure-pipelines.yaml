trigger: none       #파이프라인 자동 실행 방지

pool:
  vmImage: ubuntu-latest

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false          #실패하면 작업 종료 옵션
        steps:
          - task: TerraformInstaller@1
            displayName: install
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'Song-test'
              backendAzureRmResourceGroupName: 'SHJ-TEST-RG'
              backendAzureRmStorageAccountName: 'songhjdevstr'
              backendAzureRmContainerName: 'testcon'
              backendAzureRmKey: 'devpipeline.terraform.tfstate'
          - task: TerraformTaskV4@4
            displayName: vaildate
            inputs:
              provider: 'azurerm'
              command: 'validate'
  - stage: tfdeploy
    condition: succeeded('tfvalidate')     #tfvalidate 실행 성공하면 실행
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'Song-test'
              backendAzureRmResourceGroupName: 'SHJ-TEST-RG'
              backendAzureRmStorageAccountName: 'songhjdevstr'
              backendAzureRmContainerName: 'testcon'
              backendAzureRmKey: 'devpipeline.terraform.tfstate'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'Song-test'
          - task: TerraformTaskV4@4
            displayName: apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'Song-test'
